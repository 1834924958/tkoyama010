.. opencae2021B13 documentation master file, created by
   sphinx-quickstart on Thu Dec  2 11:20:56 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

========================
GetFEM Contribution 2021
========================

@tkoyama010

.. こんにちは小山といいますよろしくお願いします．

お前だれよ？
============

.. image:: https://pbs.twimg.com/profile_images/1455426242375991296/xKa0LNy8_400x400.jpg
.. image:: https://raw.githubusercontent.com/tkoyama010/tkoyama010/master/profile-summary-card-output/vue/2-most-commit-language.svg

.. raw:: html

    <p>
      <a href="https://twitter.com/intent/follow?screen_name=tkoyama010">
        <img src="https://user-images.githubusercontent.com/7629661/87821427-202e0280-c870-11ea-9e38-8c7c74856753.png" width="144" alt="Follow @tkoyama010 on Twitter" title="Follow @tkoyama010 on Twitter">
      </a>

      <a href="https://github.com/sponsors/tkoyama010">
        <img src="https://user-images.githubusercontent.com/7629661/87821425-1f956c00-c870-11ea-9871-a76f99739501.png" width="156" alt="Sponsor tkoyama010 on GitHub" title="Sponsor tkoyama010 on GitHub">
      </a>
    </p>

.. まずは自己紹介をします．
   アカウントは @tkoyama010 で活動しています．
   有限要素法FEMライブラリ GetFEM と可視化ライブラリ PyVista の開発/検証をしています．
   よろしければフォーローお願いいたします．

CoFEAプロジェクトについて
=========================

- ベンチマーク問題と実問題を集めています．
- シミュレーション環境を正しく設定する方法に関する情報が1箇所に集められます．
- スクリプトとツールによって拡張されたシミュレーションワークフローが確立され、オープンソースツールの使用が容易になります．
- オープンソース・ソフトウェアに関するメッセージがインターネット上に広がり、コミュニティーの成長を助けるでしょう．

.. 2021年の貢献ではCoFEAプロジェクトの例題を追加しました．
   CoFEAプロジェクトについて説明します．
   このプロジェクトはオープンソースソフトウェアの信頼性を高めるために、たくさんのベンチマーク問題と実問題を集めています．
   シミュレーション環境を正しく設定する方法に関する情報が1箇所に集められますので、誰でも設定できます．
   スクリプトとツールによって拡張されたシミュレーションワークフローが確立され、オープンソースツールの使用が容易になります．
   オープンソース・ソフトウェアに関するメッセージがインターネット上に広がり、コミュニティーの成長を助けるでしょう．

貢献の方法
==========

あなたが貢献できる方法はたくさんあります:

- シミュレーションソフトの使い方を知っていればモデルの作成を手伝うことができます
- もしあなたが文章を書くのが得意なら、文書を書くのを手伝うことができます
- 最後に、あなたが上の何も持っていないと思っているが、熱心に学びたいと思っているなら、私たちに知らせてください!

.. 貢献の方法について説明します．
   あなたが貢献できる方法はたくさんあります:
   シミュレーションソフトの使い方を知っていればモデルの作成を手伝うことができます
   もしあなたが文章を書くのが得意なら、文書を書くのを手伝うことができます
   最後に、あなたが上の何も持っていないと思っているが、熱心に学びたいと思っているなら、私たちに知らせてください!

ライセンス
==========

- CoFEA計画を目的として作成された技術的コンテンツはすべて、クリエイティブ・コモンズBY-NC-SA4.0ライセンスです．
  簡単に言えば、2つの条件下でコンテンツを共有し適応させることができます．
- コンテンツが何らかの形で共有される場合には、CoFEA計画に適切なクレジットを与えなければなりません．

.. 最後にライセンスについて説明します．
   CoFEA計画を目的として作成された技術的コンテンツはすべて、クリエイティブ・コモンズBY-NC-SA4.0ライセンスです．
   簡単に言えば、2つの条件下でコンテンツを共有し適応させることができます．
   コンテンツが何らかの形で共有される場合には、CoFEA計画に適切なクレジットを与えなければなりません．

音叉ベンチマーク
================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/fork-geo-results.png

.. 今回、音叉の固有値解析のベンチマークにGetFEMの結果を追加したので説明します．
   このベンチマークは異なる有限要素コードで実行したモーダル解析の結果を比較することを目的としています．
   音叉ジオメトリを使用してソフトウェアのパフォーマンスを測定します．
   本解析で使用した音叉ジオメトリでは、振動の第1周波数は既存の文献から440Hzに近いと予想されます．
   このベンチマークでは、フリー-フリーの固有値解析を実行できるかどうか、およびその実行の容易さもチェックします．

材料特性
========

.. csv-table::
   :header: 特性, 値, 単位

      密度 :math:`\rho` , :math:`7829.0`, :math:`kg/m^3`
      ヤング率 :math:`E` , :math:`2.07 \cdot 10^{11}`, :math:`Pa`
      ポアソン比, :math:`0.33`,

.. こちらの表は、解析で使用されたすべての材料特性を示しています．
   これらの特性は鋼材の挙動を再現することを目的としています．
   また、自由体モードシミュレーションであるため、音叉には境界条件が割り当てられていません．

結果
====

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/movie.gif

.. 異なる要素タイプとメッシュサイズを持つ多数のシミュレーションをチューニングモデルに対して行いました．
   こちらのアニメーションは、Calculixコードの結果を示しています．

結果
====

- オープンソースソフトウェアを使用して、正しい解を得ることが可能です．
- 3つのソルバーはすべて非常に類似した応答を返しましたが、CalculixとElmerが最も簡単に設定できたように思います．
  それらは追加設定なしで剛体モードを選択しました．
  一方、Code_Asterは、非剛体モードのみを検索するように設定するか( ‘Bande’ という設定で可能)、モデルを拘束する必要があります．

.. 以上の解析からいくつかの結果が得られます．
   オープンソースソフトウェアを使用して、正しい解を得ることが可能です．
   3つのソルバーはすべて非常に類似した応答を返しましたが、CalculixとElmerが最も簡単に設定できたように思います．
   それらは追加設定なしで剛体モードを選択しました．
   一方、Code_Asterは、非剛体モードのみを検索するように設定するか( ‘Bande’ という設定で可能)、モデルを拘束する必要があります．

コードの比較
============

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/code-comparison.png

.. こちらが各コードの固有値解析の結果を比較したものです．
   Calculix/Code_Aster/Elmer/商用/MoFEM/GetFEMいずれも結果が一致することがわかります．

四面体メッシュ
==============

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/tet-comparison.png

.. 四面体メッシュの結果はこちらになります．
   2次形状関数は線形形状関数よりもはるかに正確な解を与えていることがわかります．

六面体メッシュ
==============

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/hex-comparison.png

.. 六面体メッシュの結果はこちらになります．
   2次形状関数は線形形状関数よりもはるかに正確な解を与えていることがわかります．


初期化
======

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 6-12

.. 最後に今回追加したGetFEMのスクリプトについて説明します．
.. まず，GetFEM をグローバルにインポートします(numpy と scipy もインポートする必要があります)．

モデルのパラメータ
==================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 20-29

.. 次に，問題の物理パラメータを定義します．
.. 今回はヤング率、ポアソン比と質量密度が必要です．

メッシュ生成その1
=================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 35-84

.. GetFEMは外部メッシャ (例えばGiD または Gmsh) を使用してインポートすることができます．
   今回は線形/2次元の四面体メッシュと六面体メッシュの組み合わせの12ケースの解析を行います。
   そのため、メッシュのファイル名と要素の次数をリストに定義します。

メッシュ生成その2
=================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 92-96

.. リストに整理したファイルのメッシュをインポートします。

有限要素法と積分法の定義
========================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 105-119

.. 次に、2つの有限要素法を定義します．最初の1つは，変位フィールドを近似する mfu です．
   これはベクトルフィールドでこちらのように定義されます．
   第2の有限要素法はスカラーで，こちらのように定義されます．

質量行列と剛性行列のアセンブリング
==================================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 125-140

.. 定義した有限要素法と積分法を使用して質量行列と剛性行列のアセンブリングを行います。
   質量行列は asm_mass_matrix 関数でアセンブリングすることが可能です。
   質量行列は単位密度あたりの質量行列が出力されるため scale メソッドで質量密度倍する必要があります。

固有値解析を解く
================

.. literalinclude:: tuning_fork.py
   :language: python
   :lines: 156-209

.. 得られた質量行列と剛性行列を元に固有値解析を行います。
   固有値解析にはscipyを使用します。
   行列をHarwell-Booeing形式で保存をしそれをscipyのモジュールで読み込みます。
   scipyで解く際には剛体モードを除去するためイテレーションの開始振動数を400Hzとします。

圧力下の厚板
============

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/sketch.png

.. まだ、時間がありますので今後取り組んでいくベンチマークについても説明したいと思います。
   1つ目は圧力下の厚板の問題です。
   CalculiX 、 Code_Aster 、 Elmer 有限要素コードで行った静的解析の結果の比較を目的としています。ソフトウェアのパフォーマンスを測定するために、厚板形状を使用します。
   このベンチマークの目的は、点Dにおける厚板の応力 :math:`\sigma_{yy}` を調べることです。
   この時点での対象解は5.38MPaに等しいと予想されます。
   さらに、このベンチマークを使用して、圧力荷重条件を適用するのがどの程度簡単かをテストできます。
   境界条件は、面DCD'C'で :math:`u_y = 0`。
   面ABA'B'で :math:`u_x = 0`。
   面BCB'C'で :math:`u_y = u_x = 0`。
   線EE'で :math:`u_z = 0`となります。
   荷重はABCD上に1MPaの均一な法線圧力が加えられます。

材料特性
========

.. csv-table::
   :header: 特性, 値, 単位

      密度 :math:`\rho` , :math:`7800.0`, :math:`kg/m^3`
      ヤング率 :math:`E` , :math:`2.10 \cdot 10^{11}`, :math:`Pa`
      ポアソン比, :math:`0.33`,

.. こちらの表は、解析で使用されたすべての材料特性を示しています。
   これらの特性は鋼材の挙動を再現することを目的としています。

結果
====

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/ccx_output.png

.. こちらはCalculixソフトウェアおよび2次六面体メッシュで得られた結果です。

四面体メッシュによる結果
========================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/tet-comparison_thick_plate.png

六面体メッシュによる結果
========================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/hex-comparison_thick_plate.png


.. オープンソースソフトウェアを使用して、圧力荷重条件で構造解析を実行し、正しい解を得ることが可能です。
   本解析では、かなり粗いメッシュを試験し、 :math:`sigma_yy = 5.38 Mpa` の目標に近い応力値を得ることができました。
   非常に細かいメッシュの追加テストが実行され、テストされたすべてのFEコードが目標値に収束しました。
   CalculixとCode_Asterは一般に、線形六角メッシュの場合とは別に、同様の出力を生成していることがわかります。
   これは,線形六面体メッシュに対して若干異なる要素定式化が使用されたことを示しています。
   Elmerの結果は他のFEコードと比較して異なる収束挙動を示しました。
   この挙動は異なる数値スキーム実装の結果である可能性がありますが、 Elmer実行で使用されるFEメッシュが他のコードの実行とわずかに異なることも強調されるべきです。
   この違いは、CalculixとCode_Asterで使用されているメッシュがmeshpressoコンバータの出力として提供されたものであり、Elmerとの互換性がないために生じました。
   3 Dジオメトリでは、すべてのタイプの要素(3 D六角線/四角線、2 D三角線/四角線、1 Dワイヤ)を指定する必要があるように見えますが、現在の段階では、meshpressoは3 Dまたは2 D要素のみを提供します。
   しかし、ElmerGUIは、Salome環境で作成されたある種の .UNV メッシュをインポートするのに苦労していることも指摘しておきます。
   特に、2次六面体メッシュタイプは問題があると思われます。

Cook’s membrane
================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/cook.png

.. Cook membrane 問題は古典的なベンチマークテストであり、非圧縮性条件下でのせん断固定挙動をチェックするために使用されます。
   この解析では、0.3333と0.4999の異なるポアソン比値を持つ線形材料モデルをテストしました。
   特に後者の値では,解の計算が困難になることが予想されます。
   このベンチマークのもう1つの目的は、FEコードがせん断方向の領域に分布した力を適用できるかどうかをチェックすることです。
   圧力の定義 (領域上の垂直力) は、すべてのFEコードの中で非常に一般的な荷重条件ですが、面に接する方向の変形はそれほど一般的ではありません。
   本解析では、三次元形状をモデル化しました。このベンチマークにはさまざまなバリーションがありますが、この例では5 mmの厚さが想定されています。
   本解析の膜は、 左側で固定され (上図の寸法44 mm) 、面外方向の対称条件も想定されています。
   モデルは、ジオメトリの右側に適用された :math:`6.25 N/mm` の分布力により動かされます。

四面体メッシュ :math:`\nu=0.33`
===============================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/v33_tet-comparison_cook.png

.. ポアソン比0.3333の場合ベンチマークの目標解は32.00 mmです。

.. 線形要素は、非圧縮性に近いシナリオでは収束率が低いことを示します。
   2次形状関数がより正確な解を得ることを可能にすることは驚くことではありませんが、グラフは、線形形状関数が目標値を得ることを可能にしないことを本当によく証明しています。

四面体メッシュ :math:`\nu=0.49`
===============================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/v44_tet-comparison_cook.png

.. ポアソン比0.4999の場合28.00 mmです。
   同じく、2次形状関数がより正確な解を得ることを可能にすることは驚くことではありませんが、グラフは、線形形状関数が目標値を得ることを可能にしないことを本当によく証明しています。

.. オープンソースソフトウェアは、以上のシナリオに対する正しい解を得ることを可能にします。
   しかし,試験したFEコードの全てが容易な方法で面力を適用できるわけではないことに注意すべきです。
   たとえば、Calculixソルバーでは面力条件を適用できません。
   本解析では, PrePoMaxと呼ばれるフリーの前処理および後処理ツールを用いて、面力定義を作成しました。
   このソフトウェアは、荷重を節点に適用される集中荷重のセットに変換します。
   Calculixとは異なり、Code_AsterおよびElmerパッケージでは、領域全体に分布する力を全体座標系の方向に適用できます。

六面体メッシュ :math:`\nu=0.33`
===============================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/v33_hex-comparison_cook.png

六面体メッシュ :math:`\nu=0.49`
===============================

.. image:: https://cofea-ja.readthedocs.io/ja/latest/_images/v49_hex-comparison_cook.png

.. 線形四面体要素は、線形六面体メッシュに比べて収束率が高いことがわかります。
   エッジは均一に表示される(たとえば、各エッジが均等分割されています。)と仮定しました。
   その結果、六面体メッシュのアスペクト比が中程度の値であることが、これらの要素の解析に影響している可能性があります。

まとめ
======

- CoFEAプロジェクトについて説明しました．
- CoFEAプロジェクトの音叉ベンチマークにGetFEMの結果を追加しました．
- 今後追加する予定のベンチマークとして圧力下の厚板とCook’s membraneを紹介しました。

.. 最後にまとめです。
   CoFEAプロジェクトについて説明しました．
   CoFEAプロジェクトの音叉ベンチマークにGetFEMの結果を追加しました．
   今後追加する予定のベンチマークとして圧力下の厚板とCook’s membraneを紹介しました。
